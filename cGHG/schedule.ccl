# Schedule definitions for thorn cGHG

STORAGE: chi
STORAGE: gamma_tilde
STORAGE: K_hat
STORAGE: A_tilde
STORAGE: Gam_tilde
STORAGE: Theta
STORAGE: alphaG
STORAGE: betaG

STORAGE: ZtC
STORAGE: HC
STORAGE: MtC
STORAGE: allC

STORAGE: chi_rhs
STORAGE: gamma_tilde_rhs
STORAGE: K_hat_rhs
STORAGE: A_tilde_rhs
STORAGE: Gam_tilde_rhs
STORAGE: Theta_rhs
STORAGE: alphaG_rhs
STORAGE: betaG_rhs



################################################################################



SCHEDULE GROUP cGHG_InitialGroup AT initial AFTER ADMBaseX_PostInitial
{
} "Convert ADM to cGHG variables"

SCHEDULE GROUP cGHG_PostStepGroup AT initial AFTER cGHG_InitialGroup BEFORE ADMBaseX_SetADMVars
{
} "Post-process cGHG variables"

SCHEDULE GROUP cGHG_PostStepGroup2 AT initial AFTER (TmunuBaseX_SetTmunuVars, cGHG_PostStepGroup) BEFORE ADMBaseX_SetADMRHS
{
} "Post-process cGHG variables, part 2"



SCHEDULE GROUP cGHG_PostStepGroup AT postregrid BEFORE ADMBaseX_SetADMVars
{
} "Post-process cGHG variables"

SCHEDULE GROUP cGHG_PostStepGroup2 AT postregrid AFTER (TmunuBaseX_SetTmunuVars, cGHG_PostStepGroup) BEFORE ADMBaseX_SetADMRHS
{
} "Post-process cGHG variables, part 2"



SCHEDULE GROUP cGHG_AnalysisGroup AT analysis
{
} "Analyse cGHG variables"



SCHEDULE GROUP cGHG_PostStepGroup IN ODESolvers_PostStep BEFORE ADMBaseX_SetADMVars
{
} "Post-process cGHG variables"

SCHEDULE GROUP cGHG_PostStepGroup2 IN ODESolvers_PostStep AFTER (TmunuBaseX_SetTmunuVars, cGHG_PostStepGroup) BEFORE ADMBaseX_SetADMRHS
{
} "Post-process cGHG variables, part 2"

SCHEDULE GROUP cGHG_RHSGroup IN ODESolvers_RHS
{
} "Calculate cGHG RHS"



################################################################################



SCHEDULE cGHG_Test AT wragh
{
  LANG: C
  OPTIONS: meta
} "Self-test"



# We have 4 schedule groups:
# 1. initial: set up core cGHG variables from ADM variables
# 2. poststep: post-process core cGHG variables and calculate other variables
# 3. analysis: calculate constraints etc.
# 4. rhs: calculate RHS of cGHG variables



SCHEDULE cGHG_Initial1 IN cGHG_InitialGroup
{
  LANG: C
  READS: ADMBaseX::metric(interior)
  READS: ADMBaseX::curv(interior)
  READS: ADMBaseX::lapse(interior)
  READS: ADMBaseX::shift(interior)
  WRITES: chi(interior)
  WRITES: gamma_tilde(interior)
  WRITES: K_hat(interior)
  WRITES: A_tilde(interior)
  WRITES: Theta(interior)
  WRITES: alphaG(interior)
  WRITES: betaG(interior)
  # SYNC: chi
  SYNC: gamma_tilde
  # SYNC: K_hat
  # SYNC: A_tilde
  # SYNC: Theta
  # SYNC: alphaG
  # SYNC: betaG
} "Convert ADM to cGHG variables, part 1"

SCHEDULE cGHG_Initial2 IN cGHG_InitialGroup AFTER cGHG_Initial1
{
  LANG: C
  READS: gamma_tilde(everywhere)
  WRITES: Gam_tilde(interior)
  # SYNC: Gam_tilde
} "Convert ADM to cGHG variables, part 2"



SCHEDULE cGHG_Enforce IN cGHG_PostStepGroup
{
  LANG: C
  READS: chi(interior)
  READS: gamma_tilde(interior)
  READS: A_tilde(interior)
  READS: alphaG(interior)
  WRITES: chi(interior)
  WRITES: gamma_tilde(interior)
  WRITES: A_tilde(interior)
  WRITES: alphaG(interior)
  SYNC: chi
  SYNC: gamma_tilde
  SYNC: K_hat
  SYNC: A_tilde
  SYNC: Gam_tilde
  SYNC: Theta
  SYNC: alphaG
  SYNC: betaG
} "Enforce algebraic cGHG constraints"

if (calc_ADM_vars) {
  SCHEDULE cGHG_ADM IN cGHG_PostStepGroup AFTER cGHG_Enforce
  {
    LANG: C
    READS: chi(everywhere)
    READS: gamma_tilde(everywhere)
    READS: K_hat(everywhere)
    READS: A_tilde(everywhere)
    READS: Gam_tilde(everywhere)
    READS: Theta(everywhere)
    READS: alphaG(everywhere)
    READS: betaG(everywhere)
    # READS: TmunuBaseX::eTtt(interior)
    # READS: TmunuBaseX::eTti(interior)
    # READS: TmunuBaseX::eTij(interior)
    WRITES: ADMBaseX::metric(everywhere)
    WRITES: ADMBaseX::curv(everywhere)
    WRITES: ADMBaseX::lapse(everywhere)
    WRITES: ADMBaseX::dtlapse(everywhere)
    WRITES: ADMBaseX::shift(everywhere)
    WRITES: ADMBaseX::dtshift(everywhere)
  } "Convert cGHG to ADM variables"
}

if (calc_ADMRHS_vars) {
  SCHEDULE cGHG_ADM2 IN cGHG_PostStepGroup2
  {
    LANG: C
    READS: chi(everywhere)
    READS: gamma_tilde(everywhere)
    READS: K_hat(everywhere)
    READS: A_tilde(everywhere)
    READS: Gam_tilde(everywhere)
    READS: Theta(everywhere)
    READS: alphaG(everywhere)
    READS: betaG(everywhere)
    READS: TmunuBaseX::eTtt(interior)
    READS: TmunuBaseX::eTti(interior)
    READS: TmunuBaseX::eTij(interior)
    WRITES: ADMBaseX::dtcurv(interior)
    WRITES: ADMBaseX::dt2lapse(interior)
    WRITES: ADMBaseX::dt2shift(interior)
    SYNC: ADMBaseX::dtcurv
    SYNC: ADMBaseX::dt2lapse
    SYNC: ADMBaseX::dt2shift
  } "Calculate second time derivatives of ADM variables"
}



if (calc_constraints) {
  SCHEDULE cGHG_Constraints IN cGHG_AnalysisGroup
  {
    LANG: C
    READS: chi(everywhere)
    READS: gamma_tilde(everywhere)
    READS: K_hat(everywhere)
    READS: A_tilde(everywhere)
    READS: Gam_tilde(everywhere)
    READS: Theta(everywhere)
    READS: alphaG(everywhere)
    READS: betaG(everywhere)
    READS: TmunuBaseX::eTtt(interior)
    READS: TmunuBaseX::eTti(interior)
    READS: TmunuBaseX::eTij(interior)
    WRITES: ZtC(interior)
    WRITES: HC(interior)
    WRITES: MtC(interior)
    WRITES: allC(interior)
    # SYNC: ZtC
    # SYNC: HC
    # SYNC: MtC
    # SYNC: allC
  } "Calculate cGHG constraints"
}



SCHEDULE cGHG_RHS IN cGHG_RHSGroup
{
  LANG: C
  READS: chi(everywhere)
  READS: gamma_tilde(everywhere)
  READS: K_hat(everywhere)
  READS: A_tilde(everywhere)
  READS: Gam_tilde(everywhere)
  READS: Theta(everywhere)
  READS: alphaG(everywhere)
  READS: betaG(everywhere)
  READS: TmunuBaseX::eTtt(interior)
  READS: TmunuBaseX::eTti(interior)
  READS: TmunuBaseX::eTij(interior)
  WRITES: chi_rhs(interior)
  WRITES: gamma_tilde_rhs(interior)
  WRITES: K_hat_rhs(interior)
  WRITES: A_tilde_rhs(interior)
  WRITES: Gam_tilde_rhs(interior)
  WRITES: Theta_rhs(interior)
  WRITES: alphaG_rhs(interior)
  WRITES: betaG_rhs(interior)
} "Calculate cGHG RHS"

if (CCTK_Equals(boundary_conditions, "NewRadX")) {
  SCHEDULE cGHG_apply_newradx_boundary_conditions IN cGHG_RHSGroup AFTER cGHG_RHS
  {
    LANG: C
    READS: chi(everywhere)
    READS: gamma_tilde(everywhere)
    READS: K_hat(everywhere)
    READS: A_tilde(everywhere)
    READS: Gam_tilde(everywhere)
    READS: Theta(everywhere)
    READS: alphaG(everywhere)
    READS: betaG(everywhere)
    READS: chi_rhs(interior)
    READS: gamma_tilde_rhs(interior)
    READS: K_hat_rhs(interior)
    READS: A_tilde_rhs(interior)
    READS: Gam_tilde_rhs(interior)
    READS: Theta_rhs(interior)
    READS: alphaG_rhs(interior)
    READS: betaG_rhs(interior)
    WRITES: chi_rhs(interior)
    WRITES: gamma_tilde_rhs(interior)
    WRITES: K_hat_rhs(interior)
    WRITES: A_tilde_rhs(interior)
    WRITES: Gam_tilde_rhs(interior)
    WRITES: Theta_rhs(interior)
    WRITES: alphaG_rhs(interior)
    WRITES: betaG_rhs(interior)
  } "Apply radiative boundary conditions to cGHG RHS variables using NewRadX"
}
